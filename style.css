@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800;900&display=swap');

/* Common Styles */
*{
    margin:0;
    padding:0;
    box-sizing: border-box;
    text-decoration: none;
    outline: none;
    font-family: 'Nunito',sans-serif;
    font-weight: 400;
}

.section-heading{
    font-size:12rem;
    font-weight: 900;
    color:rgb(255, 255, 255);
    text-align: center;
    text-transform: capitalize;
    letter-spacing: 0.5rem;
    text-shadow: 0.3rem 0.3rem 0.3rem #000;
}

html{
    font-size: 62.5%;
}
/* End of Common Styles */

/* Navbar */
.navbar{
    width:100%;
    height: 14rem;
    background-color: #000;
    position: fixed;
    top:-14rem;
    z-index: 100;
    display:flex;
    flex-direction: row;
    align-items: center;
    /* center flex-items vertically  */
    justify-content: center;
    /* center flex-items horizontaly */
    box-shadow: 0.2rem 0.2rem 0.2rem #000;
    transition:top 0.4s;
}

.navbar.change{
    top:0;
    transition:top 0.4s 0.2s ;
}

.navbar-link{
    color:#aaa;
    margin:0 4rem;
    display: flex;
    flex-direction:column;
    justify-content: center;
    align-items: center;
    transition: color 0.3s,opacity 0.2s;
    opacity: 0;
}

.change .navbar-link{
    /* it means when there is .change class applied, then do this stuff */
    opacity:1;
}

.change .navbar-link:nth-of-type(1){
    transition: opacity 0.4s 0.5s,color 0.3s;
}

.change .navbar-link:nth-of-type(2){
    transition: opacity 0.4s 0.6s,color 0.3s;
}

.change .navbar-link:nth-of-type(3){
    transition: opacity 0.4s 0.7s,color 0.3s;
}

.change .navbar-link:nth-of-type(4){
    transition: opacity 0.4s 0.8s,color 0.3s;
}

.change .navbar-link:nth-of-type(5){
    transition: opacity 0.4s 0.9s,color 0.3s;
}

.navbar-link:hover{
    color: #fff;
}

.navbar-link i{
    font-size:7rem;
}
.navbar-link span{
    font-size:2.5rem;
    font-weight: 900;
    letter-spacing: 0.5rem;
    margin-top: 0.5rem;
}

.menu{
    width:4rem;
    height: 6rem;
    background-color: #000;
    /* right now, the menu icon is not visible because it is placed behind the navbar
    so i am going to place it little bit down, and make it fixed */
    position: fixed;
    top:1rem;
    left:5rem;
    border-radius: 30rem 30rem 15rem 15rem;
    box-shadow: 0.1rem 0.1rem 0.1rem #000, -0.1rem -0.1rem 0.1rem #000;
    /* Next, we will going to make a line which is going to be the part of the icon and
    we will create it using the before pseudo element, it will be created before the
    menu element, so we need to fix its position. */
    cursor:pointer;
    transition:top 0.4s 0.2s;
    z-index: 100;
}

.menu.change{
    top:15rem;
    transition:top 0.4s;
}

.menu::before{
    content: "";
    width:0.3rem;
    height: 15rem;
    background-color: #000;
    position:absolute;
    top:-15rem;
    left:calc(50% - 0.15rem);
    /* 50% of the parent i.e. 4rem width of the menu */
    box-shadow: 0.1rem 0.1rem 0.1rem #000;
}
/* End of Navbar */

/* Section-1 */
.section-1{
    width:100%;
    height: 100vh;
    background-color: #333;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

.section-1-icons{
   width: 30rem;
   /* height: 300px; no need to provide height, let the height adjust by itself*/
   display: flex;
   flex-direction: row;
   justify-content: center;
   align-items: center;
}

.section-1-icons i{
    font-size:35rem;
    color:#ebc003;
    position: absolute;
    text-shadow:0.2rem 0.2rem 0.2rem #000;
    transform: scale(0);
    /* in order to hide the element, we set the scale to 0 */
    transition:transform 0.3s;
} 

.section-1-icons i.change{
    transform:scale(1);
    transition:transform 0.3s 0.3s;
}
/* End of Section-1 */

/* Section-2 */
.section-2{
    width: 100%;
    height: 100vh;
    background-color: #222;
    display: flex;
    flex-direction: column;
    /*align-items: center; /*if i do this all the card will be at center, no effect of justify content in the cards-container,
    i.e on the nested flex box, the property justify-content will have no-effect, if the flex direction in the nested flexbox
    is row*/
    justify-content: space-between;
    padding: 5rem 0;
}

.cards-container{
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

.card{
    width: 30rem;
    background-color: #ffbe32;
    padding: 4rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between; 
    align-items: center;
    box-shadow: 1rem 1rem 1rem #000;
    position: relative;
    /* we need it in order to position before pseudo element accroding to its parent element */
    transform: rotateY(20deg) skewX(-2deg);
    transition:transform 0.5s,box-shadow 0.5s; 
}

.card:hover{
    transform: rotateY(20deg) skewX(-2deg) translateY(-3rem);
    box-shadow: 2rem 2rem 2rem;
}

.card::before{
    content:"";
    height:100%;
    width:1rem;
    background-color: #d48b03;
    position:absolute;
    top:0;
    left:-1rem;
    transform: skewY(45deg);
    /* All right the element is skewed, but still its position is not correct, it's slightly missed, by 
    default when we use transform proprty, then the element moves according to its center. So the origin
    of transform is set to the center. But in this case we need to change it and make it right.*/
    transform-origin: right;
    box-shadow: -0.1rem -0.1rem 0.1rem #000;
}

.card::after{
    content:"";
    height:1rem;
    width:100%;
    background-color: #d48b03;
    position:absolute;
    top:-1rem;
    left:0;
    transform: skewX(45deg);
    transform-origin: bottom;
    box-shadow: -0.1rem -0.1rem 0.1rem #000;
}

.card-img{
    width: 100%;
    /* in this case the image will take up 100% of the width of its parent element i.e. card.
    since box sizing is border-box, it means the content of the box will change and the total
    width including padding,border and content will be constant equal to the set width on cards.
    so if we apply 4rem padding on all side then width of the content will decrease to 220 px,in
    order to maintain the overall width of 300px, so the card image will have the, 100% width of
    the parent, which is 220px */
}

.card-name{
    font-size:3rem;
    font-weight:900;
    text-transform: uppercase;
    letter-spacing: 0.5rem;
    color: #111;
    margin: 2rem 0;
    text-shadow: 0.15rem 0.15rem 0.15rem #000;
}
.card-btn{
    width:70%;
    background-color: #111;
    color: #888;
    border-radius: 5rem;
    font-size:1.5rem;
    font-weight:800;
    letter-spacing: 0.2rem;
    text-transform: capitalize;
    border: none;
    padding:0.5rem;
    cursor:pointer;
    box-shadow: -0.2rem -0.2rem 0.2rem #000;
}
/* End of Section-1 */

/* Section-3 */
.section-3{
    width:100%;
    background-color: #333;
    padding:5rem 0;
} 

.gallery{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
    margin-top: 10rem;
}

.gallery-link{
    position: relative;
    /* we need to set the positon of the link elements to relative because it is a parent
    element and we need to position heading and image-description according to the link. */
    margin:4rem 1rem;
}

.gallery-link::before{
    content: "";
    position: absolute;
    width:0.2rem;
    height: 0;
    background-color: #fff;
    top:2vw;
    left:80%;
    transition:height 0.5s;
    z-index: 10;
    /* The vertical line is not quite visible because it endede up, behind the image
    , so in order to fix that we have to use z-index property. */
}

.gallery-link:hover::before{
    height: 80%;
}


.gallery-link::after{
    content: "";
    position: absolute;
    width:0;
    height: 0.2rem;
    background-color: #fff;
    top:4vw;
    left:2rem;
    /* transform:rotate(90deg);
    transform-origin: bottom; */
    transition:width 0.5s; 
}

.gallery-link:hover::after{
    width: 90%;
}
/* in actual we apply the transition property on the same element, but not with hover pseudo class */
/* .gallery-link::after:hover, not this because the lines are hidden, having width and height to 0, 
so we have have to apply the hover effect on the gallery link itself */

.food-img{
    width:24vw;
    height: 15vw;
    object-fit: cover;
    /* object-fit set to cover will allow us to maintain tha quality of the image,
    it won't be stretched. */
    box-shadow: 0.3rem 0.3rem 0.1rem #e92929, 0.5rem 0.5rem 0.1rem 
    #a2e946,0.7rem 0.7rem 0.1rem #297ce9, 0.9rem 0.9rem 0.1rem #e92999;
    transition: all 0.5s;
}

.gallery-link:hover .food-img{
    box-shadow: 1rem 1rem 0.1rem #e92929, 2rem 2rem 0.1rem 
    #a2e946,3rem 3rem 0.1rem #297ce9, 4rem 4rem 0.1rem #e92999;
    filter:blur(0.5rem);
    opacity: 0.5;
    transform: scale(1.1);
}

.food-name{
    position: absolute;
    /* if we set positon of child element to be absolute, then the element is removed
    from the normal flow of the document, and no space is given to the element. And it
    is offsets relative to its closest positioned ancestor, and if no then with the
    top conatining block */
    top:3rem;
    left:3rem;
    font-size:2rem;
    font-weight: 700; 
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    color: #fff;
    width:0;
    overflow: hidden;
    transition: width 0.3s;
}

.gallery-link:hover .food-name{
    width:100%;
    transition: width 1.5s 0.5s;
    /* and besides that we need some delay here, we want transition to apply after the two lines
    have been appeared, i.e. we need delay of 0.5s, on property transtion */
}

.food-description{
    position: absolute;
    bottom:3vw;
    left:2rem;
    width:70%;
    /* Since the parent element i.e gallery-link has the width of 24vw=368.64px .
    now, the 70% of the parent width will be 258.048px */
    font-size:1.5rem;
    text-transform: uppercase;
    font-weight: 300;
    letter-spacing: 0.1rem;
    color: #fff;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s
}

.gallery-link:hover .food-description{
    opacity: 1;
    visibility: visible;
    transition: opacity 1s 1s;
}
/* End of Section-3 */

/* Footer */
.footer{
    width: 100%;
    height: 30vh;
    background-color: #222;
    padding: 3rem 0;
    display:flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: flex-start;
    position: relative;
}

.footer-text{
    text-transform: uppercase;
}

.footer-heading{
    font-size:4rem;
    font-weight: 900;
    color:#ffbe32;
}

.footer-paragraph{
    font-size:1.5rem;
    color:#888;
}

.signup-form{
    display: flex;
    flex-direction: row;
    align-items: center;
}

.signup-form-input{
    width:35rem;
    height:5rem;
    padding:1rem;
    border:0.2rem solid #ffbe32;
    font-size:1.6rem;
    font-weight: 700;
    letter-spacing: 0.1rem;
    color:#fcac00;
}

.signup-form-input::placeholder{
    color:#fcac00;
}

.signup-form-btn{
    position: relative;
    /* we use here realative because we need to use left propety and in case of a static position,
    which is the default one, we can't access this property. And its parent form.signup-form has 
    default position static.*/
    right:4.5rem;
    width: 4rem;
    height: 4rem;
    color:#ffbe32;
    background-color: #333;
    border: none;
    font-size:1.8rem;
}

.copyright{
    position: absolute;
    /* then in order to align this paragraph according to its parent element we will set the
    position of the parent element to be relative, now the element will be removed from flex
    items list.*/
    bottom: 3rem;
    /* the paragraph element is not affected by padding of parent element, it can be situated
    in the padding area too, depending upon the bottom, top offsetting property*/
    font-size:1.7rem;
    font-weight: 200;
    color:#eee;
    letter-spacing: 0.1rem;
    border-top: 0.1rem solid #888;
    padding-top:6rem;
    width: 100%;
    text-align: center;
}
/* End of Footer */
@media (max-width:1400px){
    html{
        font-size:50%;
        /* it will decrease the sizes of the elements where we have used RAM as the measurement
        unit */
    }

    .section-2{
        height: auto;
        padding:10rem 0;
        /* set height to auto, otherwise padding at the bottom won't be applied */
    }

    .cards-container{
        margin-top:10rem;
    }

    .gallery-link{
        width:40rem;
        height:25rem;
        /* and besides that we have to define height, and the width of the images as well */
        margin:5rem;
    }
    
    .food-img{
        width: 100%;
        height: 100%;
    }
}

@media (max-width:1000px){
    .section-heading{
        font-size:9rem;
        margin: 0 5rem;
    }

    .section-1-icons i{
        font-size:25rem;
    }

    .cards-container{
        flex-wrap:wrap;
    }

    .card{
        margin: 5rem;
    }

    .footer{
        height:30rem;
    }
}

@media (max-width:900px){
    .navbar-link{
        margin:2rem;
    }
    
    .navbar-link i{
        font-size: 4rem;
    }

    .navbar-link span{
        font-size:2rem;
    }

    .footer-text{
        margin-left:4rem;
    }
}

@media (max-width:700px){
    .section-heading{
        font-size: 7rem;
        margin:0 10rem;
    }

    .section-1-icons i{
        font-size:20rem;
    }

    .menu{
        left:2rem;
    }

    .footer{
        height: 40rem;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
    }

    .footer-text{
        margin-bottom: 8rem;
    }

    .signup-form{
        margin-left:5rem;
    }
}

@media (max-width:550px){
    html{
        font-size:40%;
        /* it means now 1 rem is equal to 40% of 16px i.e. 6.4px */
    }

    .navbar-link{
        margin:0 0.7rem;
    }

    .menu{
        z-index: 10;
    }
}

/* Responsive */

/* End of Responsive */